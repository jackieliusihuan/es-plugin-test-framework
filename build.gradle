/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

/**
 * you can remove all those instructive comments for your own projects
 */

plugins {
    id "elasticsearch.esplugin" version "${es_version}"
}

// 在semver版本管理方法上加一位， 7.10.2是es的版本号，0是此插件的版本号
version "${es_version}"

// no need，在这个版本此插件已经被引入
//apply plugin: 'elasticsearch.testclusters'

// 为了支持 集成测试
apply plugin: 'elasticsearch.rest-test'

// 为了支持 yaml-rest 集成测试
apply plugin: 'elasticsearch.yaml-rest-test'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.guava/guava
    testCompile group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    //needed for executing ESClientYamlSuiteTestCase
    yamlRestTestImplementation 'org.apache.logging.log4j:log4j-core:2.11.1'
}

esplugin {
    name = project.name
    description = "A ES Sample Plugin"
    classname = "com.sihuan.es.plugin.SamplePlugin"
    version = project.version
}

ext {
    licenseFile = rootProject.file('LICENSE')
    noticeFile = rootProject.file('NOTICE')
}

//控制tasks的启动与关闭
forbiddenApisMain.enabled(false)
licenseHeaders.enabled(false)
loggerUsageCheck.enabled(false)
validateNebulaPom.enabled(false)
forbiddenApisTest.enabled(false)

//supported by plugin testclusters, 此处为testClusters extention，用于定义测试集群的属性
testClusters {
    firstCluster {
        plugin(project.tasks.bundlePlugin.archiveFile)
        numberOfNodes = 3
    }
    secondCluster {
        plugin(project.tasks.bundlePlugin.archiveFile)
        numberOfNodes = 3
    }
}

//在这里创建的es集群发现模式是 discovery.seed_providers: file
//也就是要求文件存在于： $ES_PATH_CONF/unicast_hosts.txt， 里面记录了集群所有节点的ip跟对应的端口号
//这个文件需要我们去控制生成, ElasticsearchCluster提供了waitForAllConditions()方法，同时也增加了一个"cluster health yellow"等待条件
run {
    useCluster testClusters.firstCluster
    useCluster testClusters.secondCluster
    doFirst {
        getClusters().forEach { cluster ->
            cluster.waitForAllConditions()
        }
    }
}

//集成测试
testClusters.integTest {
    plugin(project.tasks.bundlePlugin.archiveFile)
    numberOfNodes = 3
}
integTest {
    dependsOn(bundlePlugin)
}

//yaml-rest集成测试
//此处不用显示的声明插件安装，默认会安装上
testClusters.yamlRestTest {
    numberOfNodes = 3
}